
STM32F429xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000520  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006cc  080006d4  000106d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006cc  080006cc  000106d4  2**0
                  CONTENTS
  4 .ARM          00000000  080006cc  080006cc  000106d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006cc  080006d4  000106d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006cc  080006cc  000106cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006d0  080006d0  000106d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080006d4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080006d4  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000106d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007d7  00000000  00000000  000106fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000217  00000000  00000000  00010ed5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  000110f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  000111a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001316  00000000  00000000  00011238  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000997  00000000  00000000  0001254e  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00005266  00000000  00000000  00012ee5  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001814b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  000181c8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	080006b4 	.word	0x080006b4

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	080006b4 	.word	0x080006b4

080001ec <GPIO_PCLK_Control>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_PCLK_Control(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001ec:	b480      	push	{r7}
 80001ee:	b083      	sub	sp, #12
 80001f0:	af00      	add	r7, sp, #0
 80001f2:	6078      	str	r0, [r7, #4]
 80001f4:	460b      	mov	r3, r1
 80001f6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001f8:	78fb      	ldrb	r3, [r7, #3]
 80001fa:	2b01      	cmp	r3, #1
 80001fc:	d162      	bne.n	80002c4 <GPIO_PCLK_Control+0xd8>
	{
		if(pGPIOx == GPIOA)
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	4a65      	ldr	r2, [pc, #404]	; (8000398 <GPIO_PCLK_Control+0x1ac>)
 8000202:	4293      	cmp	r3, r2
 8000204:	d106      	bne.n	8000214 <GPIO_PCLK_Control+0x28>
			GPIOA_PCLK_EN();
 8000206:	4b65      	ldr	r3, [pc, #404]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000208:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020a:	4a64      	ldr	r2, [pc, #400]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800020c:	f043 0301 	orr.w	r3, r3, #1
 8000210:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
			GPIOH_PCLK_DI();
		else if(pGPIOx == GPIOI)
				GPIOI_PCLK_DI();
	}
}
 8000212:	e0bc      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOB)
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	4a62      	ldr	r2, [pc, #392]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000218:	4293      	cmp	r3, r2
 800021a:	d106      	bne.n	800022a <GPIO_PCLK_Control+0x3e>
			GPIOB_PCLK_EN();
 800021c:	4b5f      	ldr	r3, [pc, #380]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800021e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000220:	4a5e      	ldr	r2, [pc, #376]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000222:	f043 0302 	orr.w	r3, r3, #2
 8000226:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000228:	e0b1      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOC)
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	4a5d      	ldr	r2, [pc, #372]	; (80003a4 <GPIO_PCLK_Control+0x1b8>)
 800022e:	4293      	cmp	r3, r2
 8000230:	d106      	bne.n	8000240 <GPIO_PCLK_Control+0x54>
			GPIOC_PCLK_EN();
 8000232:	4b5a      	ldr	r3, [pc, #360]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000236:	4a59      	ldr	r2, [pc, #356]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000238:	f043 0304 	orr.w	r3, r3, #4
 800023c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023e:	e0a6      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOD)
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	4a59      	ldr	r2, [pc, #356]	; (80003a8 <GPIO_PCLK_Control+0x1bc>)
 8000244:	4293      	cmp	r3, r2
 8000246:	d106      	bne.n	8000256 <GPIO_PCLK_Control+0x6a>
			GPIOD_PCLK_EN();
 8000248:	4b54      	ldr	r3, [pc, #336]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800024a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024c:	4a53      	ldr	r2, [pc, #332]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800024e:	f043 0308 	orr.w	r3, r3, #8
 8000252:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000254:	e09b      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOE)
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	4a54      	ldr	r2, [pc, #336]	; (80003ac <GPIO_PCLK_Control+0x1c0>)
 800025a:	4293      	cmp	r3, r2
 800025c:	d106      	bne.n	800026c <GPIO_PCLK_Control+0x80>
			GPIOE_PCLK_EN();
 800025e:	4b4f      	ldr	r3, [pc, #316]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000260:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000262:	4a4e      	ldr	r2, [pc, #312]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000264:	f043 0310 	orr.w	r3, r3, #16
 8000268:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026a:	e090      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOF)
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	4a50      	ldr	r2, [pc, #320]	; (80003b0 <GPIO_PCLK_Control+0x1c4>)
 8000270:	4293      	cmp	r3, r2
 8000272:	d106      	bne.n	8000282 <GPIO_PCLK_Control+0x96>
			GPIOF_PCLK_EN();
 8000274:	4b49      	ldr	r3, [pc, #292]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000276:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000278:	4a48      	ldr	r2, [pc, #288]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800027a:	f043 0320 	orr.w	r3, r3, #32
 800027e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000280:	e085      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOG)
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a4b      	ldr	r2, [pc, #300]	; (80003b4 <GPIO_PCLK_Control+0x1c8>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d106      	bne.n	8000298 <GPIO_PCLK_Control+0xac>
			GPIOG_PCLK_EN();
 800028a:	4b44      	ldr	r3, [pc, #272]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800028c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028e:	4a43      	ldr	r2, [pc, #268]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000290:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000294:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000296:	e07a      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOH)
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	4a47      	ldr	r2, [pc, #284]	; (80003b8 <GPIO_PCLK_Control+0x1cc>)
 800029c:	4293      	cmp	r3, r2
 800029e:	d106      	bne.n	80002ae <GPIO_PCLK_Control+0xc2>
			GPIOH_PCLK_EN();
 80002a0:	4b3e      	ldr	r3, [pc, #248]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a4:	4a3d      	ldr	r2, [pc, #244]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ac:	e06f      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOI)
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	4a42      	ldr	r2, [pc, #264]	; (80003bc <GPIO_PCLK_Control+0x1d0>)
 80002b2:	4293      	cmp	r3, r2
 80002b4:	d16b      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
			GPIOI_PCLK_EN();
 80002b6:	4b39      	ldr	r3, [pc, #228]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ba:	4a38      	ldr	r2, [pc, #224]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c2:	e064      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
	else if(EnorDi == DISABLE)
 80002c4:	78fb      	ldrb	r3, [r7, #3]
 80002c6:	2b00      	cmp	r3, #0
 80002c8:	d161      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
		if(pGPIOx == GPIOA)
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a32      	ldr	r2, [pc, #200]	; (8000398 <GPIO_PCLK_Control+0x1ac>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d106      	bne.n	80002e0 <GPIO_PCLK_Control+0xf4>
			GPIOA_PCLK_DI();
 80002d2:	4b32      	ldr	r3, [pc, #200]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d6:	4a31      	ldr	r2, [pc, #196]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002d8:	f043 0301 	orr.w	r3, r3, #1
 80002dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002de:	e056      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOB)
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a2f      	ldr	r2, [pc, #188]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <GPIO_PCLK_Control+0x10a>
			GPIOB_PCLK_DI();
 80002e8:	4b2c      	ldr	r3, [pc, #176]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ec:	4a2b      	ldr	r2, [pc, #172]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002ee:	f043 0302 	orr.w	r3, r3, #2
 80002f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f4:	e04b      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOC)
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a2a      	ldr	r2, [pc, #168]	; (80003a4 <GPIO_PCLK_Control+0x1b8>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_PCLK_Control+0x120>
			GPIOC_PCLK_DI();
 80002fe:	4b27      	ldr	r3, [pc, #156]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000302:	4a26      	ldr	r2, [pc, #152]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000304:	f043 0304 	orr.w	r3, r3, #4
 8000308:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030a:	e040      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOD)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a26      	ldr	r2, [pc, #152]	; (80003a8 <GPIO_PCLK_Control+0x1bc>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <GPIO_PCLK_Control+0x136>
			GPIOD_PCLK_DI();
 8000314:	4b21      	ldr	r3, [pc, #132]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000318:	4a20      	ldr	r2, [pc, #128]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800031a:	f043 0308 	orr.w	r3, r3, #8
 800031e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000320:	e035      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOE)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a21      	ldr	r2, [pc, #132]	; (80003ac <GPIO_PCLK_Control+0x1c0>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <GPIO_PCLK_Control+0x14c>
			GPIOE_PCLK_DI();
 800032a:	4b1c      	ldr	r3, [pc, #112]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800032c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032e:	4a1b      	ldr	r2, [pc, #108]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000330:	f043 0310 	orr.w	r3, r3, #16
 8000334:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000336:	e02a      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOF)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a1d      	ldr	r2, [pc, #116]	; (80003b0 <GPIO_PCLK_Control+0x1c4>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d106      	bne.n	800034e <GPIO_PCLK_Control+0x162>
			GPIOF_PCLK_DI();
 8000340:	4b16      	ldr	r3, [pc, #88]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a15      	ldr	r2, [pc, #84]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000346:	f043 0320 	orr.w	r3, r3, #32
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034c:	e01f      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOG)
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4a18      	ldr	r2, [pc, #96]	; (80003b4 <GPIO_PCLK_Control+0x1c8>)
 8000352:	4293      	cmp	r3, r2
 8000354:	d106      	bne.n	8000364 <GPIO_PCLK_Control+0x178>
			GPIOG_PCLK_DI();
 8000356:	4b11      	ldr	r3, [pc, #68]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035a:	4a10      	ldr	r2, [pc, #64]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800035c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000362:	e014      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOH)
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4a14      	ldr	r2, [pc, #80]	; (80003b8 <GPIO_PCLK_Control+0x1cc>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d106      	bne.n	800037a <GPIO_PCLK_Control+0x18e>
			GPIOH_PCLK_DI();
 800036c:	4b0b      	ldr	r3, [pc, #44]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a0a      	ldr	r2, [pc, #40]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000372:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	e009      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOI)
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4a0f      	ldr	r2, [pc, #60]	; (80003bc <GPIO_PCLK_Control+0x1d0>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d105      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
				GPIOI_PCLK_DI();
 8000382:	4b06      	ldr	r3, [pc, #24]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000386:	4a05      	ldr	r2, [pc, #20]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000388:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800038c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038e:	bf00      	nop
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	bc80      	pop	{r7}
 8000396:	4770      	bx	lr
 8000398:	40020000 	.word	0x40020000
 800039c:	40023800 	.word	0x40023800
 80003a0:	40020400 	.word	0x40020400
 80003a4:	40020800 	.word	0x40020800
 80003a8:	40020c00 	.word	0x40020c00
 80003ac:	40021000 	.word	0x40021000
 80003b0:	40021400 	.word	0x40021400
 80003b4:	40021800 	.word	0x40021800
 80003b8:	40021c00 	.word	0x40021c00
 80003bc:	40022000 	.word	0x40022000

080003c0 <GPIO_Init>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003c0:	b480      	push	{r7}
 80003c2:	b085      	sub	sp, #20
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	6078      	str	r0, [r7, #4]
	//1. GPIO Mode configuration

	uint32_t temp = 0;
 80003c8:	2300      	movs	r3, #0
 80003ca:	60fb      	str	r3, [r7, #12]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	795b      	ldrb	r3, [r3, #5]
 80003d0:	2b03      	cmp	r3, #3
 80003d2:	d81e      	bhi.n	8000412 <GPIO_Init+0x52>
	{
		//non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << ( 2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	795b      	ldrb	r3, [r3, #5]
 80003d8:	461a      	mov	r2, r3
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	791b      	ldrb	r3, [r3, #4]
 80003de:	005b      	lsls	r3, r3, #1
 80003e0:	fa02 f303 	lsl.w	r3, r2, r3
 80003e4:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	681a      	ldr	r2, [r3, #0]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	791b      	ldrb	r3, [r3, #4]
 80003f0:	4619      	mov	r1, r3
 80003f2:	2303      	movs	r3, #3
 80003f4:	408b      	lsls	r3, r1
 80003f6:	43db      	mvns	r3, r3
 80003f8:	4619      	mov	r1, r3
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	400a      	ands	r2, r1
 8000400:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	6819      	ldr	r1, [r3, #0]
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	68fa      	ldr	r2, [r7, #12]
 800040e:	430a      	orrs	r2, r1
 8000410:	601a      	str	r2, [r3, #0]
		//interrupt mode setup
	}

	//2 . GPIO Speed Configuration

	temp = 0;
 8000412:	2300      	movs	r3, #0
 8000414:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	799b      	ldrb	r3, [r3, #6]
 800041a:	461a      	mov	r2, r3
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	791b      	ldrb	r3, [r3, #4]
 8000420:	005b      	lsls	r3, r3, #1
 8000422:	fa02 f303 	lsl.w	r3, r2, r3
 8000426:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	689a      	ldr	r2, [r3, #8]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	791b      	ldrb	r3, [r3, #4]
 8000432:	4619      	mov	r1, r3
 8000434:	2303      	movs	r3, #3
 8000436:	408b      	lsls	r3, r1
 8000438:	43db      	mvns	r3, r3
 800043a:	4619      	mov	r1, r3
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	400a      	ands	r2, r1
 8000442:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	6899      	ldr	r1, [r3, #8]
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	68fa      	ldr	r2, [r7, #12]
 8000450:	430a      	orrs	r2, r1
 8000452:	609a      	str	r2, [r3, #8]



	//3. GPIO PullUp and PullDown configuration

	temp = 0;
 8000454:	2300      	movs	r3, #0
 8000456:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	79db      	ldrb	r3, [r3, #7]
 800045c:	461a      	mov	r2, r3
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	791b      	ldrb	r3, [r3, #4]
 8000462:	005b      	lsls	r3, r3, #1
 8000464:	fa02 f303 	lsl.w	r3, r2, r3
 8000468:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	68da      	ldr	r2, [r3, #12]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	791b      	ldrb	r3, [r3, #4]
 8000474:	4619      	mov	r1, r3
 8000476:	2303      	movs	r3, #3
 8000478:	408b      	lsls	r3, r1
 800047a:	43db      	mvns	r3, r3
 800047c:	4619      	mov	r1, r3
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	400a      	ands	r2, r1
 8000484:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	68d9      	ldr	r1, [r3, #12]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	68fa      	ldr	r2, [r7, #12]
 8000492:	430a      	orrs	r2, r1
 8000494:	60da      	str	r2, [r3, #12]

	//4. GPIO Output Type configuration

	temp = 0;
 8000496:	2300      	movs	r3, #0
 8000498:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	7a1b      	ldrb	r3, [r3, #8]
 800049e:	461a      	mov	r2, r3
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	005b      	lsls	r3, r3, #1
 80004a6:	fa02 f303 	lsl.w	r3, r2, r3
 80004aa:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	685a      	ldr	r2, [r3, #4]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	791b      	ldrb	r3, [r3, #4]
 80004b6:	4619      	mov	r1, r3
 80004b8:	2301      	movs	r3, #1
 80004ba:	408b      	lsls	r3, r1
 80004bc:	43db      	mvns	r3, r3
 80004be:	4619      	mov	r1, r3
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	400a      	ands	r2, r1
 80004c6:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	6859      	ldr	r1, [r3, #4]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	68fa      	ldr	r2, [r7, #12]
 80004d4:	430a      	orrs	r2, r1
 80004d6:	605a      	str	r2, [r3, #4]

	//5. GPIO Alternate function configuration

	temp = 0;
 80004d8:	2300      	movs	r3, #0
 80004da:	60fb      	str	r3, [r7, #12]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	795b      	ldrb	r3, [r3, #5]
 80004e0:	2b02      	cmp	r3, #2
 80004e2:	d131      	bne.n	8000548 <GPIO_Init+0x188>
	{
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	08db      	lsrs	r3, r3, #3
 80004ea:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	791b      	ldrb	r3, [r3, #4]
 80004f0:	f003 0307 	and.w	r3, r3, #7
 80004f4:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2 ));
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	7afa      	ldrb	r2, [r7, #11]
 80004fc:	3208      	adds	r2, #8
 80004fe:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000502:	7abb      	ldrb	r3, [r7, #10]
 8000504:	009b      	lsls	r3, r3, #2
 8000506:	220f      	movs	r2, #15
 8000508:	fa02 f303 	lsl.w	r3, r2, r3
 800050c:	43db      	mvns	r3, r3
 800050e:	4618      	mov	r0, r3
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	7afa      	ldrb	r2, [r7, #11]
 8000516:	4001      	ands	r1, r0
 8000518:	3208      	adds	r2, #8
 800051a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2 ));
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	7afa      	ldrb	r2, [r7, #11]
 8000524:	3208      	adds	r2, #8
 8000526:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	7a5b      	ldrb	r3, [r3, #9]
 800052e:	461a      	mov	r2, r3
 8000530:	7abb      	ldrb	r3, [r7, #10]
 8000532:	009b      	lsls	r3, r3, #2
 8000534:	fa02 f303 	lsl.w	r3, r2, r3
 8000538:	4618      	mov	r0, r3
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	7afa      	ldrb	r2, [r7, #11]
 8000540:	4301      	orrs	r1, r0
 8000542:	3208      	adds	r2, #8
 8000544:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000548:	bf00      	nop
 800054a:	3714      	adds	r7, #20
 800054c:	46bd      	mov	sp, r7
 800054e:	bc80      	pop	{r7}
 8000550:	4770      	bx	lr

08000552 <GPIO_ReadFromInputPin>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000552:	b480      	push	{r7}
 8000554:	b085      	sub	sp, #20
 8000556:	af00      	add	r7, sp, #0
 8000558:	6078      	str	r0, [r7, #4]
 800055a:	460b      	mov	r3, r1
 800055c:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber ) & 0x00000001 );
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	691a      	ldr	r2, [r3, #16]
 8000562:	78fb      	ldrb	r3, [r7, #3]
 8000564:	fa22 f303 	lsr.w	r3, r2, r3
 8000568:	b2db      	uxtb	r3, r3
 800056a:	f003 0301 	and.w	r3, r3, #1
 800056e:	73fb      	strb	r3, [r7, #15]
	return value;
 8000570:	7bfb      	ldrb	r3, [r7, #15]

}
 8000572:	4618      	mov	r0, r3
 8000574:	3714      	adds	r7, #20
 8000576:	46bd      	mov	sp, r7
 8000578:	bc80      	pop	{r7}
 800057a:	4770      	bx	lr

0800057c <GPIO_ToggleOutputPin>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800057c:	b480      	push	{r7}
 800057e:	b083      	sub	sp, #12
 8000580:	af00      	add	r7, sp, #0
 8000582:	6078      	str	r0, [r7, #4]
 8000584:	460b      	mov	r3, r1
 8000586:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= ( 1 << PinNumber);
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	695b      	ldr	r3, [r3, #20]
 800058c:	78fa      	ldrb	r2, [r7, #3]
 800058e:	2101      	movs	r1, #1
 8000590:	fa01 f202 	lsl.w	r2, r1, r2
 8000594:	405a      	eors	r2, r3
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	615a      	str	r2, [r3, #20]
}
 800059a:	bf00      	nop
 800059c:	370c      	adds	r7, #12
 800059e:	46bd      	mov	sp, r7
 80005a0:	bc80      	pop	{r7}
 80005a2:	4770      	bx	lr

080005a4 <main>:
{
	for(uint32_t i = 0; i < 100000; i++);
}

int main()
{
 80005a4:	b580      	push	{r7, lr}
 80005a6:	b086      	sub	sp, #24
 80005a8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GpioBtn;
	GpioLed.pGPIOx = GPIOG;
 80005aa:	4b19      	ldr	r3, [pc, #100]	; (8000610 <main+0x6c>)
 80005ac:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber 		= GPIO_PIN_NO_13;
 80005ae:	230d      	movs	r3, #13
 80005b0:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode 		= GPIO_MODE_OUTPUT;
 80005b2:	2301      	movs	r3, #1
 80005b4:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed		= GPIO_SPEED_FAST;
 80005b6:	2302      	movs	r3, #2
 80005b8:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType 		= GPIO_OUT_TYPE_OD;
 80005ba:	2301      	movs	r3, #1
 80005bc:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl 	= GPIO_NO_PUPD;
 80005be:	2300      	movs	r3, #0
 80005c0:	74fb      	strb	r3, [r7, #19]

	GPIO_PCLK_Control(GPIOG, ENABLE);
 80005c2:	2101      	movs	r1, #1
 80005c4:	4812      	ldr	r0, [pc, #72]	; (8000610 <main+0x6c>)
 80005c6:	f7ff fe11 	bl	80001ec <GPIO_PCLK_Control>

	GPIO_Init(&GpioLed);
 80005ca:	f107 030c 	add.w	r3, r7, #12
 80005ce:	4618      	mov	r0, r3
 80005d0:	f7ff fef6 	bl	80003c0 <GPIO_Init>

	GpioBtn.pGPIOx = GPIOA;
 80005d4:	4b0f      	ldr	r3, [pc, #60]	; (8000614 <main+0x70>)
 80005d6:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber 		= GPIO_PIN_NO_0;
 80005d8:	2300      	movs	r3, #0
 80005da:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode 		= GPIO_MODE_INPUT;
 80005dc:	2300      	movs	r3, #0
 80005de:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed		= GPIO_SPEED_FAST;
 80005e0:	2302      	movs	r3, #2
 80005e2:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl 	= GPIO_PIN_PD;
 80005e4:	2302      	movs	r3, #2
 80005e6:	71fb      	strb	r3, [r7, #7]

	GPIO_PCLK_Control(GPIOA, ENABLE);
 80005e8:	2101      	movs	r1, #1
 80005ea:	480a      	ldr	r0, [pc, #40]	; (8000614 <main+0x70>)
 80005ec:	f7ff fdfe 	bl	80001ec <GPIO_PCLK_Control>

	GPIO_Init(&GpioBtn);
 80005f0:	463b      	mov	r3, r7
 80005f2:	4618      	mov	r0, r3
 80005f4:	f7ff fee4 	bl	80003c0 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED)
 80005f8:	2100      	movs	r1, #0
 80005fa:	4806      	ldr	r0, [pc, #24]	; (8000614 <main+0x70>)
 80005fc:	f7ff ffa9 	bl	8000552 <GPIO_ReadFromInputPin>
 8000600:	4603      	mov	r3, r0
 8000602:	2b01      	cmp	r3, #1
 8000604:	d1f8      	bne.n	80005f8 <main+0x54>
		{
			GPIO_ToggleOutputPin(GPIOG, GPIO_PIN_NO_13);
 8000606:	210d      	movs	r1, #13
 8000608:	4801      	ldr	r0, [pc, #4]	; (8000610 <main+0x6c>)
 800060a:	f7ff ffb7 	bl	800057c <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED)
 800060e:	e7f3      	b.n	80005f8 <main+0x54>
 8000610:	40021800 	.word	0x40021800
 8000614:	40020000 	.word	0x40020000

08000618 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000618:	480d      	ldr	r0, [pc, #52]	; (8000650 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800061a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800061c:	480d      	ldr	r0, [pc, #52]	; (8000654 <LoopForever+0x6>)
  ldr r1, =_edata
 800061e:	490e      	ldr	r1, [pc, #56]	; (8000658 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000620:	4a0e      	ldr	r2, [pc, #56]	; (800065c <LoopForever+0xe>)
  movs r3, #0
 8000622:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000624:	e002      	b.n	800062c <LoopCopyDataInit>

08000626 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000626:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000628:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800062a:	3304      	adds	r3, #4

0800062c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800062c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800062e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000630:	d3f9      	bcc.n	8000626 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000632:	4a0b      	ldr	r2, [pc, #44]	; (8000660 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000634:	4c0b      	ldr	r4, [pc, #44]	; (8000664 <LoopForever+0x16>)
  movs r3, #0
 8000636:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000638:	e001      	b.n	800063e <LoopFillZerobss>

0800063a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800063a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800063c:	3204      	adds	r2, #4

0800063e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800063e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000640:	d3fb      	bcc.n	800063a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000642:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000646:	f000 f811 	bl	800066c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800064a:	f7ff ffab 	bl	80005a4 <main>

0800064e <LoopForever>:

LoopForever:
    b LoopForever
 800064e:	e7fe      	b.n	800064e <LoopForever>
  ldr   r0, =_estack
 8000650:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000654:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000658:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800065c:	080006d4 	.word	0x080006d4
  ldr r2, =_sbss
 8000660:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000664:	2000001c 	.word	0x2000001c

08000668 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000668:	e7fe      	b.n	8000668 <ADC_IRQHandler>
	...

0800066c <__libc_init_array>:
 800066c:	b570      	push	{r4, r5, r6, lr}
 800066e:	4e0d      	ldr	r6, [pc, #52]	; (80006a4 <__libc_init_array+0x38>)
 8000670:	4c0d      	ldr	r4, [pc, #52]	; (80006a8 <__libc_init_array+0x3c>)
 8000672:	1ba4      	subs	r4, r4, r6
 8000674:	10a4      	asrs	r4, r4, #2
 8000676:	2500      	movs	r5, #0
 8000678:	42a5      	cmp	r5, r4
 800067a:	d109      	bne.n	8000690 <__libc_init_array+0x24>
 800067c:	4e0b      	ldr	r6, [pc, #44]	; (80006ac <__libc_init_array+0x40>)
 800067e:	4c0c      	ldr	r4, [pc, #48]	; (80006b0 <__libc_init_array+0x44>)
 8000680:	f000 f818 	bl	80006b4 <_init>
 8000684:	1ba4      	subs	r4, r4, r6
 8000686:	10a4      	asrs	r4, r4, #2
 8000688:	2500      	movs	r5, #0
 800068a:	42a5      	cmp	r5, r4
 800068c:	d105      	bne.n	800069a <__libc_init_array+0x2e>
 800068e:	bd70      	pop	{r4, r5, r6, pc}
 8000690:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000694:	4798      	blx	r3
 8000696:	3501      	adds	r5, #1
 8000698:	e7ee      	b.n	8000678 <__libc_init_array+0xc>
 800069a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800069e:	4798      	blx	r3
 80006a0:	3501      	adds	r5, #1
 80006a2:	e7f2      	b.n	800068a <__libc_init_array+0x1e>
 80006a4:	080006cc 	.word	0x080006cc
 80006a8:	080006cc 	.word	0x080006cc
 80006ac:	080006cc 	.word	0x080006cc
 80006b0:	080006d0 	.word	0x080006d0

080006b4 <_init>:
 80006b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006b6:	bf00      	nop
 80006b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ba:	bc08      	pop	{r3}
 80006bc:	469e      	mov	lr, r3
 80006be:	4770      	bx	lr

080006c0 <_fini>:
 80006c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006c2:	bf00      	nop
 80006c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006c6:	bc08      	pop	{r3}
 80006c8:	469e      	mov	lr, r3
 80006ca:	4770      	bx	lr
